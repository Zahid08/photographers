<?php

/*
 * WARNING: This file is part of Photographers
 * DO NOT edit this file, under any circumstances.
 *
 * @package Photographers
 * @version 1
 * @php version 7.2.2
 * @laravel version 5.5
 * @author Zahid Hasan (http://zahidhasan.brotherhoodinfotech.com)
 * @copyright Copyright Â© 2017 - Zahid Hasan.
 * @last-modified 23/05/18
 */

namespace App\Http\Controllers\backend;
use App\Http\Controllers\Controller;

use App\InvitationModleZA;
use App\PhotosZA;
use App\TrackModelZA;
use App\User;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Response;
use Intervention\Image\Facades\Image;
use File;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Input;
use Illuminate\Support\Facades\Session;

class ProfileController extends Controller
{
    /*
     * Dashboard ->My Photos Panel
     * Functionality :uploaded image show with another invitation image
     */
    public function myPhotos(){
        $users_track_id=Session::get('users_track_id');
        $datalist=PhotosZA::where('users_track_id',$users_track_id)->get();
        $datalistothers=InvitationModleZA::where('users_track_id',$users_track_id)->get();
        return view('backend.myphotos.myPhotosContent',compact('datalist','datalistothers'));
    }

    /*
    * Dashboard ->Upload Image Panel
    * Functionality :uploaded image contetn view
    */

    public  function upLoadPhotos(){

        return view('backend.uploadphotos.uploadPhotosContent');
    }

    /*
    * Dashboard ->Upload Photos Panel
    * Functionality :all given data save into database properly setup with validation
     * uploaded image save on public folder->upload->myphotos folder
    */

    public  function addUploadPhotos(Request $request){
        $users_track_id=Input::get('users_track_id');
        $photo_title=Input::get('photo_title');
        $photo_description=Input::get('photo_description');
      //  $image=Input::get('image');
        $visisbility=Input::get('visisbility');

        $errors = array();
        if (empty($photo_title) || $photo_title == '') {
            $errors['photo_title'] = "photo title required";
        }
        if (empty($photo_description) || $photo_description == '') {
            $errors['photo_description'] = "photo description  required";
        }
        if (empty($photo_title) || $photo_title == '') {
            $errors['photo_title'] = "photo title required";
        }
       if ($visisbility=="NULL"){
            $errors['visisbility']="visibilty required";
       }

        if (!empty($request->file('image'))) {
            if ($_FILES['image']['name']) {
                $allowed = array('jpg', 'JPG', 'jpeg', 'JPEG', 'PNG','png');
                $ext = pathinfo($_FILES['image']['name'], PATHINFO_EXTENSION);
                if (!in_array($ext, $allowed)) {
                    $errors['image'] = "Picture should be in JPG, JPEG, PNG format";
                }
                if (File::size(Input::file("image")) > 2048000) {
                    $errors['image'] = "Picture must be less than 2 MB";
                }
            }
        }
        if (count($errors) > 0) {
            return redirect()->back()->withInput()->withErrors($errors)->with('errorArray', 'Array Error Occured');
        } else {
            $randomNumber = new TrackModelZA();
            $trackId = $randomNumber->trackId(5, 10) . "za" . date("YmdHis");

           $obj=User::where('users_track_id',$users_track_id)->first();

            $imagefile = $request->file('image');
            $imageName = date('YmdHis') . "ZA" . rand(5, 10) . '.' . $request->image->getClientOriginalExtension();
            $directory= 'upload/myphotos/';
            $imageUrl = $directory.$imageName;
            Image::make($imagefile->getRealPath())->resize(160, 160)->save($imageUrl);
            $obj->image=$imageName;
            $obj->save();

            $useremail=$obj->email;
            $object=new PhotosZA();
            $object->users_track_id=$users_track_id;
            $object->phototrack_id=$trackId;
            $object->photo_title=$photo_title;
            $object->photo_description=$photo_description;
            $object->visisbility=$visisbility;
            $object->users_email=$useremail;

            $object->image=$imageName;
            $object->save();
            return redirect()->back()->with('success', ' ! Successfully  save your photos ');
        }
        }

    /*
    * Dashboard ->invitation
    * Functionality :if any user invite his any photos then call this function and all user list show
         * where user can easily invite them
    */
        public function invitation($id){
        $data=PhotosZA::where('phototrack_id',$id)->first();
        $image=$data->image;
        $dataList=User::where('users_veryfication_status','Active')
            ->where('users_track_id','!=',Session::get('users_track_id'))
            ->get();
            return view('backend.invitation.invitaitonContent',compact('dataList','image'));
    }
    /*
    * Dashboard ->invitation
    * Functionality :If invitaion done save data into databse
     * if photographers invite one person his one image ,he can not invite same image same  person
    */

    public  function invitationDone(Request $request){
        $image=Input::get('image');
        $invitaion_user_trackid=Input::get('users_track_id');
        $existence=InvitationModleZA::where('image',$image)
            ->where('users_track_id',$invitaion_user_trackid)
            ->exists();
        if ($existence){
            return redirect()->back()->with('error','this image already invited this people');
        }
        else
        {
            $users_track_id=Session::get('users_track_id');
            $data=new InvitationModleZA();
            $data->image=$image;
            $data->users_track_id=$invitaion_user_trackid;
            $data->another_usertrack_id=$users_track_id;
            $data->save();
            $count=InvitationModleZA::where('users_track_id',$invitaion_user_trackid)->count();
            return redirect()->back()->with('count',$count)->with('success', ' ! Successfully  invited this peopele ');;
        }
    }
    //Mail Send if photographers download his invitaion image
    public  function mailSend(){
        $users_track_id=Input::get('users_track_id');
        $data=User::where('users_track_id',$users_track_id)->first();
        $email=$data->email;
        $name=$data->users_name;
        $text = "Hello " .$name. "Your image downloaded from another photographer";
        Mail::raw($text, function($message)use($email) {
            $message->from('infogotegary@gmail.com', 'Photographers');
            $message->to($email)->subject('Download Image');
            Log::info('End of mail processing');
        });
        $image=Input::get('image');
        $filepath = public_path('upload/myphotos/').$image;
        return Response::download($filepath);

    }
}
